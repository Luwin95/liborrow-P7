<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:task="http://www.springframework.org/schema/task"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/jdbc 
    http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.2.xsd
">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
        	<list>
        		<value>classpath:/com/liborrow/callagainbatch/mail.properties</value>
        		<value>classpath:/com/liborrow/callagainbatch/scheduler.properties</value>
        	</list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="false"/>
    </bean>
	<!-- stored job-meta in memory -->

    <bean id="jobRepository" 
      class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"> 
        <property name="transactionManager" ref="transactionManager" />
    </bean> 
    
    <bean id="transactionManager" class=
      "org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
 
    <bean id="jobLauncher"
      class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>
    
    
    <!-- Tasklets -->
    <bean id="testTasklet" class="com.liborrow.callagainbatch.tasklet.TestTasklet"/>
    <bean id="mailTasklet" class="com.liborrow.callagainbatch.tasklet.MailTasklet"/>
    <bean id="borrowTasklet" class="com.liborrow.callagainbatch.tasklet.BorrowTasklet"/>
    <bean id="callagainJobTasklet" class="com.liborrow.callagainbatch.tasklet.CallagainJobTasklet"/>
    <bean id="getWaitingListObsoleteTasklet" class="com.liborrow.callagainbatch.tasklet.GetWaitingListObsoleteTasklet"/>
    <bean id="deleteWaitingListObsoleteTasklet" class="com.liborrow.callagainbatch.tasklet.DeleteWaitingListObsoleteTasklet"/>
    <bean id="reorganizePositionInWaitingListTasklet" class="com.liborrow.callagainbatch.tasklet.ReorganizePositionInWaitingListTasklet"/>
    <bean id="getReservationAvailableTasklet" class="com.liborrow.callagainbatch.tasklet.GetReservationAvailableTasklet"/>
    <bean id="notifyReservationAvailableTasklet" class="com.liborrow.callagainbatch.tasklet.NotifyReservationAvailableTasklet"/>
    
    <!-- Decider -->
    <bean id="userToRecallDecider" class="com.liborrow.callagainbatch.decider.UserToRecallDecider"/>
    <bean id="waitingListToDeleteDecider" class="com.liborrow.callagainbatch.decider.WaitingListToDeleteDecider"/>
    <bean id="userToNotifyReservationAvailableDecider" class="com.liborrow.callagainbatch.decider.UserToNotifyReservationAvailableDecider"/>
    
    <!-- Jobs -->
    <import resource="classpath:/com/liborrow/callagainbatch/jobTest.xml" /> 
    <import resource="classpath:/com/liborrow/callagainbatch/callagainJob.xml" /> 
    <import resource="classpath:/com/liborrow/callagainbatch/reservationJob.xml" /> 
    
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="targetClass" value="com.liborrow.callagainbatch.AbstractJob"/>
	    <property name="targetMethod" value="setManagerFactory"/>
	    <property name="arguments" ref="managerFactory"/>
	</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${liborrow.mail.host}" />
		<property name="port" value="${liborrow.mail.port}" />
		<property name="username" value="${liborrow.mail.sender.username}" />
		<property name="password" value="${liborrow.mail.sender.password}" />
	
		<property name="javaMailProperties">
		   <props>
	       	      <prop key="mail.smtp.auth">${liborrow.mail.smtp.auth}</prop>
	       	      <prop key="mail.smtp.starttls.enable">${liborrow.mail.smtp.ttls}</prop>
	       	   </props>
		</property>
	</bean>
	
	<!-- Scheduler -->
	<bean id="callagainBatchScheduler" class="com.liborrow.callagainbatch.application.scheduler.CallagainBatchScheduler"/>
	<bean id="reservationScheduler" class="com.liborrow.callagainbatch.application.scheduler.ReservationScheduler"/>
	
	<task:scheduled-tasks>
	  <task:scheduled ref="callagainBatchScheduler" method="run" cron="${com.liborrow.scheduler.callagainjob.delayProd}" />
	  <task:scheduled ref="reservationScheduler" method="run" cron="${com.liborrow.scheduler.reservationjob.delayDev}" />
	</task:scheduled-tasks>
</beans>